apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rubixnode
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:containers':
                'k:{"name":"rubixnode-1"}':
                  .: {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
      manager: unknown
      operation: Update
      time: '2024-06-26T15:11:41Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-06-26T15:11:42Z'
  name: rubixnode
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rubixnode
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 3
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rubixnode
    spec:
      containers:
        - image: >-
            gcr.io/optimal-courage-425706-k2/github.com/jupiter-meta/rubix-docker
          imagePullPolicy: Always
          name: rubixnode-1
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: rubixnode
  managedFields:
    - apiVersion: autoscaling/v2
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
      manager: unknown
      operation: Update
      time: '2024-06-25T17:24:21Z'
    - apiVersion: autoscaling/v2
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:conditions':
            .: {}
            'k:{"type":"AbleToScale"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"ScalingActive"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"ScalingLimited"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:currentMetrics': {}
          'f:currentReplicas': {}
          'f:desiredReplicas': {}
      manager: vpa-recommender
      operation: Update
      subresource: status
      time: '2024-06-26T15:57:27Z'
  name: rubixnode-hpa-seb8
  namespace: default
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rubixnode
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: rubixnode
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:allocateLoadBalancerNodePorts': {}
          'f:externalTrafficPolicy': {}
          'f:internalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":4002,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":5002,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":5050,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":8081,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":11500,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":20000,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
            'k:{"port":22010,"protocol":"TCP"}':
              .: {}
              'f:name': {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector': {}
          'f:sessionAffinity': {}
          'f:type': {}
      manager: unknown
      operation: Update
      time: '2024-06-25T17:24:50Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:finalizers':
            .: {}
            'v:"service.kubernetes.io/load-balancer-cleanup"': {}
        'f:status':
          'f:loadBalancer':
            'f:ingress': {}
      manager: cloud-controller-manager
      operation: Update
      subresource: status
      time: '2024-06-25T17:25:39Z'
  name: rubixnode-service
  namespace: default
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 34.118.237.53
  clusterIPs:
    - 34.118.237.53
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: 5050-to-5050-tcp
      nodePort: 30710
      port: 5050
      protocol: TCP
      targetPort: 5050
    - name: 5002-to-5002-tcp
      nodePort: 31979
      port: 5002
      protocol: TCP
      targetPort: 5002
    - name: 4002-to-4002-tcp
      nodePort: 32296
      port: 4002
      protocol: TCP
      targetPort: 4002
    - name: 20000-to-20000-tcp
      nodePort: 30853
      port: 20000
      protocol: TCP
      targetPort: 20000
    - name: 11500-to-11500-tcp
      nodePort: 31912
      port: 11500
      protocol: TCP
      targetPort: 11500
    - name: 22010-to-22010-tcp
      nodePort: 31352
      port: 22010
      protocol: TCP
      targetPort: 22010
    - name: 8081-to-8081-tcp
      nodePort: 30621
      port: 8081
      protocol: TCP
      targetPort: 8081
  selector:
    app: rubixnode
  sessionAffinity: None
  type: LoadBalancer
